<?php

namespace App\Exceptions;

use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;
use Illuminate\Foundation\Exceptions\RegisterErrorViewPaths;
use Illuminate\Support\Facades\Route;
use Illuminate\Validation\UnauthorizedException;
use Throwable;

class Handler extends ExceptionHandler
{
    /**
     * A list of the exception types that are not reported.
     *
     * @var array<int, class-string<Throwable>>
     */
    protected $dontReport = [
        //
    ];

    /**
     * A list of the inputs that are never flashed for validation exceptions.
     *
     * @var array<int, string>
     */
    protected $dontFlash = [
        'current_password',
        'password',
        'password_confirmation',
    ];

    /**
     * Register the exception handling callbacks for the application.
     *
     * @return void
     */
    public function register()
    {
        $this->reportable(function (Throwable $e) {
            //
        });
    }

    public function render($request, Throwable $e)
    {
        (new RegisterErrorViewPaths())();
        if ($e instanceof UnauthorizedException) {
            return response()->json([
                'status' => $e->getCode(),
                'msg' => $e->getMessage(),
            ]);
        }
        elseif ($e instanceof \Throwable) {
            if (empty(Route::currentRouteName()) || substr(Route::currentRouteName(), 0, 3) == 'api') {
                return response()->json([
                    'status' => -1,
                    'msg' => empty($e->getMessage()) ? '系统错误，请刷新重试' : $e->getMessage(),
                    'data' => new \stdClass()
                ], empty(Route::currentRouteName()) ? 404 : 500);
            }
            $data = [
                'code' => 500,
                'title' => '出错啦',
                'message' => empty($e->getMessage()) ? '系统错误，请刷新重试' : $e->getMessage()
            ];
            if (config('app.debug')) {
                $data['message'] .= '<br/>' . $e->getTraceAsString();
            }
            return response()->view('error', $data, 500);
        }
        return parent::render($request, $e); // TODO: Change the autogenerated stub
    }
}
